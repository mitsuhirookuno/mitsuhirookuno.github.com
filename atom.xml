<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[バトルプログラマー＠すま Blog]]></title>
  <link href="http://mitsuhirookuno.github.com/atom.xml" rel="self"/>
  <link href="http://mitsuhirookuno.github.com/"/>
  <updated>2012-11-05T00:52:35+09:00</updated>
  <id>http://mitsuhirookuno.github.com/</id>
  <author>
    <name><![CDATA[Mitsuhiro Okuno]]></name>
    <email><![CDATA[mitsuhiro.okuno＠gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[RubyPython、これはいいものだ]]></title>
    <link href="http://mitsuhirookuno.github.com/blog/2012/11/04/rubypython/"/>
    <updated>2012-11-04T23:27:00+09:00</updated>
    <id>http://mitsuhirookuno.github.com/blog/2012/11/04/rubypython</id>
    <content type="html"><![CDATA[<p>RubyPython、これはいいものだ</p>

<p>rubyのパッケージ管理に、bundlerを使い始めてから<br/>
どんなパッケージを利用しているのかに興味を持つようになりました。<br/>
そんな中、どーにも気になるパッケージ名があったのです。</p>

<p>その名も・・・(ﾟＡﾟ;)ｺﾞｸﾘ<br/>
<a href="http://rubypython.rubyforge.org/" title="RubyPython公式へ飛びます">RubyPython</a></p>

<p>名前だけで見れば、これは恐らく<br/>
スマフォに例えれば、iOS&amp;Andoroid。いやiOroid<br/>
企業に例えれば、Google&amp;Apple。いやGoople<br/>
食べ物に例えれば、カツカレー</p>

<p>などと、茶番はここまでにして、Let&#8217;s Try</p>

<p>まずはPython側で、呼び出される簡単なメソッドを実装します。</p>

<figure class='code'><figcaption><span> (call_python.rb)</span> <a href='http://mitsuhirookuno.github.com/downloads/code/sample/rubypython/20121104/call_python.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'><span class="c1"># -*- encoding: utf-8 -*-</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;rubypython&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="no">RubyPython</span><span class="o">.</span><span class="n">start</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s1">&#39;Pythonのクラスを呼び出す&#39;</span>
</span><span class='line'><span class="n">cPickle</span> <span class="o">=</span> <span class="no">RubyPython</span><span class="o">.</span><span class="n">import</span><span class="p">(</span><span class="s2">&quot;cPickle&quot;</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span> <span class="n">cPickle</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="s2">&quot;Testing RubyPython.&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">rubify</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s1">&#39;Pythonの自作メソッドを呼び出す&#39;</span>
</span><span class='line'><span class="n">dir</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">)</span>
</span><span class='line'><span class="n">sys</span> <span class="o">=</span> <span class="no">RubyPython</span><span class="o">.</span><span class="n">import</span> <span class="s1">&#39;sys&#39;</span>
</span><span class='line'><span class="n">sys</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">append</span> <span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">dir</span><span class="p">,</span> <span class="s1">&#39;.&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">called_ruby</span> <span class="o">=</span> <span class="no">RubyPython</span><span class="o">.</span><span class="n">import</span><span class="p">(</span><span class="s2">&quot;called_ruby&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">called_ruby</span><span class="o">.</span><span class="n">print_python</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">called_ruby</span><span class="o">.</span><span class="n">print_python_with_argument!</span><span class="p">(</span> <span class="n">arg1</span><span class="p">:</span> <span class="s2">&quot;Ruby String&quot;</span> <span class="p">)</span><span class="o">.</span><span class="n">rubify</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">called_ruby</span><span class="o">.</span><span class="n">print_python_with_argument!</span><span class="p">(</span> <span class="n">arg1</span><span class="p">:</span> <span class="mi">1234</span> <span class="p">)</span><span class="o">.</span><span class="n">rubify</span>
</span><span class='line'>
</span><span class='line'><span class="no">RubyPython</span><span class="o">.</span><span class="n">stop</span>
</span></code></pre></td></tr></table></div></figure>


<p>そして、Ruby側で呼び出す処理を記述します。</p>

<figure class='code'><figcaption><span> (called_ruby.py)</span> <a href='http://mitsuhirookuno.github.com/downloads/code/sample/rubypython/20121104/called_ruby.py'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="k">def</span> <span class="nf">print_python</span><span class="p">():</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&quot;python:&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">print_python_with_argument</span><span class="p">(</span> <span class="n">arg1</span> <span class="p">):</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&quot;python:&quot;</span><span class="p">,</span> <span class="n">arg1</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">arg1</span>
</span></code></pre></td></tr></table></div></figure>


<p>これを実行すると</p>

<pre><code>Pythonのクラスを呼び出す
S'Testing RubyPython.'
p1
.
Pythonの自作メソッドを呼び出す
python:
python: Ruby String
Ruby String
python: 1234
1234
</code></pre>

<p>おぉ！<br/>
RubyからPythonの呼び出し、簡単な引数の受け渡しが出来る事はあっさり確認出来ました。<br/>
RubyからPythonを呼び出す需要があるかは解りません。</p>

<p>続く。。。かも？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[チートしようぜ！(ruby cheat sheets)]]></title>
    <link href="http://mitsuhirookuno.github.com/blog/2012/10/26/cheat-sheets/"/>
    <updated>2012-10-26T09:13:00+09:00</updated>
    <id>http://mitsuhirookuno.github.com/blog/2012/10/26/cheat-sheets</id>
    <content type="html"><![CDATA[<p>夜中に<em>mocha</em>でのテストの書き方が解らね～とネットを徘徊していると。。。</p>

<h4>便利なサイトを発見しました。</h4>

<p><a href="http://cheat.errtheblog.com/s/mocha/" title="チートシートサイト(mocha)へ飛びます">mochaチートシート</a>
のページです。<br/>
<strong>チートシート</strong>（カンニングペーパー）の言葉のイメージは悪いものの、先駆者が作ってくれた技術Tipsメモって事です。</p>

<p>どうやら、他にも沢山のチートシートがあるらしく<br/>
<a href="http://cheat.errtheblog.com/" title="チートシートサイトへ飛びます">トップページ</a>を見て見ることに<br/>
あれ・・・？<br/>
gemコマンドの説明がある、と言う事は、、、<strong>「こいつ・・・動くぞ！」</strong></p>

<h2>コマンドとしてインストール可能</h2>

<pre><code>$ gem install cheat
Fetching: cheat-1.3.0.gem (100%)
Successfully installed cheat-1.3.0
1 gem installed
Installing ri documentation for cheat-1.3.0...
Installing RDoc documentation for cheat-1.3.0...
</code></pre>

<p>なんと、<em>アプリとしてインストール</em>が出来ちゃいます。</p>

<h3>使い方は</h3>

<ul>
<li>cheatコマンドの使い方<br/>
<code>cheat cheat</code></li>
<li>チートシート一覧を見る<br/>
<code>cheat sheets</code></li>
<li>チートシート一覧からrspecを探す場合<br/>
<code>cheat sheets | grep rspec</code></li>
<li>cheatコマンドの使い方<br/>
<code>cheat sheets | grep rspec</code></li>
<li>mochaのチートシート<br/>
<code>cheat mocha</code></li>
<li><p>vimのチートシートと出力例を一部<br/>
<code>cheat vim</code></p>

<pre><code>Cursor movement

h - move left
j - move down
k - move up
l - move right
ctrl-b - page up
以下、割愛
</code></pre></li>
</ul>


<p>コピーペーストの文化は、<strong>技術的負債</strong>に繋がりますが<br/>
使い方次第では、とっても便利なものです。 <br/>
これ日本語化を誰かしてくれないかな～(cheatjみたいな）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VPSのUbuntuを1210へアップデート]]></title>
    <link href="http://mitsuhirookuno.github.com/blog/2012/10/25/ubuntu1210update/"/>
    <updated>2012-10-25T08:49:00+09:00</updated>
    <id>http://mitsuhirookuno.github.com/blog/2012/10/25/ubuntu1210update</id>
    <content type="html"><![CDATA[<p><a href="http://www.ubuntu.com/" title="ubuntu公式へ飛びます">Ubuntu</a>
のパッケージ管理は優秀で、<em>1204LTS(Precise Pangolin)</em>では脳天気にパッケージを更新しても問題は一度もありませんでした。<br/>
ちょっとこれに気を良くして・・・現在最新である<em>1210(Quantal Quetzal)</em>へ、無謀にも挑戦しようと考えました。</p>

<p>今思うと、折角LTS(長期サポート)版を選択したのに何やってるの！とか<br/>
己の力量を弁えろ等・・・自分の無謀さに乾杯です。</p>

<p>バージョンアップは簡単、パッケージ管理アプリにLTS以外も表示させるだけです。<br/>
<strong>問題が全く発生せず、楽々バージョンアップ！</strong>しました。<br/>
って事は流石に無く、<strong>二つの問題があって（内一つは解決していません）</strong></p>

<p>一つ目は、pukiwikiが動かなくなりました。<br/>
これは、PHPのバージョンが上がった為、pukiwikiで利用しているメソッドが実装されていることが原因 <br/>
<a href="http://pukiwiki.sourceforge.jp/dev/?BugTrack2%2F349" title="この方法で動きました！">対処方法</a>
メンテナンスの終わったpukiwikiでは無く、新しいものを探すべき時なのでしょうね～
<a href="http://pukiwiki.logue.be/" title="PHP5.4も対応しているpukiwiki">Pukiwiki Advance</a>等を、おいおい試してみます。</p>

<p>二つ目は、仮想ビデオデバイスcirrusのドライバーが上手く動いてくれない（対応していない？）事です。<br/>
こちらは、cirrusでどうしても問題が解決できず、ドライバーを変更する方法で、解決いや回避をしました。</p>

<p>問題はあったもののLinuxでのアップデートも簡単になったものですねぇ</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VPSのssh用Portを変更しました]]></title>
    <link href="http://mitsuhirookuno.github.com/blog/2012/10/10/vps-ssh-port/"/>
    <updated>2012-10-10T09:27:00+09:00</updated>
    <id>http://mitsuhirookuno.github.com/blog/2012/10/10/vps-ssh-port</id>
    <content type="html"><![CDATA[<p><em>VPS</em> にドメインを割り当ててから、一ヶ月が経過した所です。<br />
今の所はアクセスも無く、そんなに攻撃にさらされることもあるまいと思いました。<br /></p>

<br />


<p>が・・・<br />
<em>sshのログ</em> (/var/log/auth.log)を見たら、かなりの攻撃の後がありました。<br /></p>

<br />


<h4>こんな <strong>スクリプト</strong> で、集計した所</h4>

<figure class='code'><figcaption><span> (passwod_failed_check.rb)</span> <a href='http://mitsuhirookuno.github.com/downloads/code/sample/passwod_failed_check.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;pp&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="no">REGEXP_AUTH_FAILED</span><span class="o">=</span><span class="sr">/Failed password for (root|invalid user ([^ ]+)) from (\d+\.\d+\.\d+\.\d+) port \d+ ssh2$/</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">setDenyHostMap</span><span class="p">(</span> <span class="n">map</span><span class="p">,</span> <span class="n">user</span><span class="p">,</span> <span class="n">ip_address</span> <span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">map</span><span class="o">.</span><span class="n">key?</span><span class="p">(</span><span class="n">ip_address</span><span class="p">)</span>
</span><span class='line'>      <span class="n">user_map</span> <span class="o">=</span> <span class="n">map</span><span class="o">.</span><span class="n">fetch</span> <span class="n">ip_address</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">user_map</span> <span class="o">=</span> <span class="no">Hash</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">user_map</span><span class="o">.</span><span class="n">key?</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>      <span class="n">user_map</span><span class="o">.</span><span class="n">store</span><span class="p">(</span> <span class="n">user</span><span class="p">,</span> <span class="p">(</span><span class="n">user_map</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="p">)</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">user_map</span><span class="o">.</span><span class="n">store</span><span class="p">(</span> <span class="n">user</span><span class="p">,</span> <span class="mi">1</span> <span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">map</span><span class="o">.</span><span class="n">store</span><span class="p">(</span> <span class="n">ip_address</span><span class="p">,</span> <span class="n">user_map</span> <span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">deny_host_map</span> <span class="o">=</span> <span class="no">Hash</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="nb">open</span><span class="p">(</span><span class="s1">&#39;/var/log/auth.log&#39;</span><span class="p">,</span><span class="s1">&#39;r&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">/\n/</span><span class="p">)</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">line</span><span class="o">|</span>
</span><span class='line'>  <span class="n">line</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="no">REGEXP_AUTH_FAILED</span><span class="p">){</span><span class="o">|</span> <span class="n">root</span><span class="p">,</span> <span class="n">user</span><span class="p">,</span> <span class="n">ip_address</span> <span class="o">|</span>
</span><span class='line'>    <span class="n">setDenyHostMap</span><span class="p">(</span> <span class="n">deny_host_map</span><span class="p">,</span> <span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">nil?</span><span class="p">)?</span> <span class="n">root</span><span class="ss">:user</span><span class="p">,</span> <span class="n">ip_address</span> <span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">deny_host_map</span><span class="o">.</span><span class="n">pretty_inspect</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>なんと13個のホストから、 合計2000回ほど・・・∑(・ω・ﾉ)ﾉ</code></p>

<br />


<p>これは放置は危険ですし、 /etc/hosts.deny で対応するには数的に骨が折れそうなので<br />
今回は、Portを49152以降のDYNAMICな領域に移しました。（REGISTEREDの方が良いかな？）<br />
 (；´Д`A &#8220;`<br /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ズゴック豆腐を買いました]]></title>
    <link href="http://mitsuhirookuno.github.com/blog/2012/10/08/zgok-doufu/"/>
    <updated>2012-10-08T22:39:00+09:00</updated>
    <id>http://mitsuhirookuno.github.com/blog/2012/10/08/zgok-doufu</id>
    <content type="html"><![CDATA[<p><img src="https://dl.dropbox.com/u/15789065/Octopress/20121008/CameraZOOM-20121003210125142.jpg" title="ズゴック豆腐パッケージ" alt="ズゴック豆腐パッケージ" /></p>

<h3>買いました！ズゴック豆腐（と、デザートザク豆腐）</h3>

<p><a href="http://sagamiya-kk.co.jp/" title="相模屋">相模屋</a>の新商品です<br />
最早、 <em>技術blog</em> を目指していた事を忘れそうです<br />
（一応、画像添付を試すという名目ではあります）<br />
これ、 <em>苦労して発売日に鹵獲しました</em> が、今日普通に <strong>近所のダイエーに山積みされてました</strong>。 <br />
(´；ω；｀)ブワッ</p>

<p><img src="https://dl.dropbox.com/u/15789065/Octopress/20121008/CameraZOOM-20121003210602748.jpg" title="ズゴック豆腐" alt="ズゴック豆腐" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown記法のチートシート]]></title>
    <link href="http://mitsuhirookuno.github.com/blog/2012/10/03/markdown-cheat-sheat/"/>
    <updated>2012-10-03T08:45:00+09:00</updated>
    <id>http://mitsuhirookuno.github.com/blog/2012/10/03/markdown-cheat-sheat</id>
    <content type="html"><![CDATA[<h2>Markdown記法はどうすればいいの？</h2>

<p><em>Octpress</em> を使うとやっぱり知りたい <em>Markdown記法</em> <br />
<strong>やっぱり</strong> と言うべきか、 <strong>解りやすい解説</strong> を見つけました <br />
<a href="https://github.com/NeQuissimus/MarkdownByExample/wiki/MarkdownSyntax" title="チートシートはこちら！">Markdown記法チートシート</a> <br />
<a href="http://yardoc.org/" title="Yard本家サイト">Yard</a>の記法なども覚えて行かないとなりません <br />
と、言う訳で <br />
今回は無駄にMarkdown記法を使ってます <br /></p>

<h3>以下は完全なお試し</h3>

<ul>
<li>リスト</li>
</ul>


<p><code>コードワンライナー</code></p>

<pre><code>コードブロックも出来る。
syntaxhighlighterも併用できるかなぁ
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressにテーマを適用しました]]></title>
    <link href="http://mitsuhirookuno.github.com/blog/2012/09/30/orange-version-of-oct2-octopress-theme/"/>
    <updated>2012-09-30T20:38:00+09:00</updated>
    <id>http://mitsuhirookuno.github.com/blog/2012/09/30/orange-version-of-oct2-octopress-theme</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/roberto/oct2-orange" title="get theme!">orange version of oct2 octopress theme</a>
というテーマを適用させて頂きました。<br />
何かエンジニアっぽい感じでワクワクします。<br />
<em>markdown</em> の書き方を覚えないと！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bloggerと併用予定です]]></title>
    <link href="http://mitsuhirookuno.github.com/blog/2012/09/30/blogger/"/>
    <updated>2012-09-30T20:21:00+09:00</updated>
    <id>http://mitsuhirookuno.github.com/blog/2012/09/30/blogger</id>
    <content type="html"><![CDATA[<p><em>git</em> の経験値があがるまではと。。。言い訳をして<br />
暫くは <em>blogger</em> に住んでいようかと思います。<br />
<a href="http://blogger.rubyprogrammer.info/" title="ココ！">すま＠blogger</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[こんにちは Octopress]]></title>
    <link href="http://mitsuhirookuno.github.com/blog/2012/09/30/hello-octopress/"/>
    <updated>2012-09-30T19:48:00+09:00</updated>
    <id>http://mitsuhirookuno.github.com/blog/2012/09/30/hello-octopress</id>
    <content type="html"><![CDATA[<p>テーマを色々変えてたら、作り直しになっちゃった。<br/>
 (´；ω；｀)ｳｯ</p>
]]></content>
  </entry>
  
</feed>
